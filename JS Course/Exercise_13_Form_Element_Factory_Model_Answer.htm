<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' lang = 'en'>
	<head>
      <meta http-equiv = 'Content-Type' content = 'text/html;charset=utf-8' />
      <script type = 'text/javascript'>

      function Override (BaseFuncName, OverrideRef)
         {
         OverrideRef.Base   = this[BaseFuncName];
         this[BaseFuncName] = OverrideRef;
         }

      function Augment (BaseFuncName, Augmenter)
         {
         var Original = this[BaseFuncName];

         this[BaseFuncName] = function ()
            {
            var Rtn = Augmenter.apply (this, arguments);

            Original.apply (this, arguments);

            return Rtn;

            };

         }

      // --------------------------------------------------------------------------------------------------------

      function CreateFormElementFactory (FormID)
         {
         var Form   = document.getElementById (FormID);
         var AmpStr = "&";
         var EqStr  = "=";


         function Element (ElementName)
            {
            var ElementRef = Form[ElementName];

            // --------------------------------------------------------------------

            function NonSuspendedEnable  () { ElementRef.disabled = Disabled = false; }
            function NonSuspendedDisable () { ElementRef.disabled = Disabled = true;  }

            function SuspendedEnable     () {                       Disabled = false; }
            function SuspendedDisable    () {                       Disabled = true;  }

            var Enable          = NonSuspendedEnable;
            var Disable         = NonSuspendedDisable;

            var DefaultDisabled = Form[ElementName].disabled;
            var Disabled        = DefaultDisabled;

            // --------------------------------------------------------------------

            var IFace =
               {
               Override    : Override,
               Augment     : Augment,

               // ----------------------------------------------

               Element     : ElementRef,

               Reset       : function () { ElementRef.disabled = Disabled = DefaultDisabled; },
               Suspend     : function ()
                  {
                  Enable              = SuspendedEnable;
                  Disable             = SuspendedDisable;
                  ElementRef.disabled = true;
                  },

               Resume      : function ()
                  {
                  Enable              = NonSuspendedEnable;
                  Disable             = NonSuspendedDisable;
                  ElementRef.disabled = Disabled;
                  },

               // ----------------------------------------------

               Enable      : function () { Enable      (); },
               Disable     : function () { Disable     (); }

               };

            return IFace;

            }

         // ----------------------------------------------------------

         return {

            Text : function (FieldName)
               {
               var IFace = Element (FieldName);

               IFace.GetValue = function ()    { return AmpStr   + FieldName + EqStr            + encodeURIComponent (IFace.Element.value);                 };
               IFace.setValue = function (Src) {                                                                      IFace.Element.value = Src[FieldName]; };

               IFace.Augment ("Reset", function () { IFace.Element.value = IFace.Element.defaultValue; });

               return IFace;

               },


            CheckBox : function (CtrlName)
               {
               var IFace = Element (CtrlName);

               IFace.GetValue = function ()     { return IFace.Element.checked ? AmpStr + CtrlName + "=1" : AmpStr + CtrlName + "=0"; }; // Can't use true and false because MySQL does not yet support booleans properly...
               IFace.setValue = function (Src)  { IFace.Element.checked = Src[CtrlName]; };

               IFace.Augment ("Reset",  function ()     { IFace.Element.checked = IFace.Element.defaultChecked; });

               return IFace;

               },

            // ------------------------------------------------------

            RadioButtons : function (CtrlName)
               {
               var IFace = Element (CtrlName); // Note that the'Element' here is the group of radio buttons, which, in the DOM is not
                                               // actually an element at all (which constitutes yet another flaw in the DOM)

               IFace.setValue = function (Src)       { IFace.Element[Src[CtrlName]].checked = true; };
               IFace.GetValue = function ()          { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { if (IFace.Element[Idx].checked) { return AmpStr   + CtrlName + EqStr            + Idx; } } };

               IFace.Enable   = function ()          { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { IFace.Element[Idx].disabled = false; } };
               IFace.Disable  = function ()          { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { IFace.Element[Idx].disabled = true;  } };

               IFace.Augment ("Suspend", function () { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { IFace.Element[Idx].disabled = true;  } });
               IFace.Augment ("Resume",  function () { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { IFace.Element[Idx].disabled = false; } });

               IFace.Augment ("Reset",   function () { for (var Idx = 0; Idx < IFace.Element.length; Idx++) { IFace.Element[Idx].checked  = IFace.Element[Idx].defaultChecked; } });

               return IFace;

               }

            };

         }

      // --------------------------------------------------------------------------------------------------------

      function Init ()
         {
         var FEF      = CreateFormElementFactory ("TestForm");

         var Elements = [//FEF.Text         ("TestText"),
                         FEF.RadioButtons ("TestRadioButtons") //,
                         //FEF.CheckBox     ("TestCheckBox")
                         ];

         var Output   = document.getElementById ("Output");

         // ------------------------------------------------------------

         var Values   = null;

         document.getElementById ("GetValues").onclick = function ()
            {
            Values = "";

            for (var M in Elements)
               {
               Values += Elements[M].GetValue ();
               }

            Output.firstChild.nodeValue = Values;

            };

         // ------------------------------------------------------------

         document.getElementById ("Suspend").onclick = function () { for (var M in Elements) { Elements[M].Suspend (); } };
         document.getElementById ("Resume") .onclick = function ()
         {
         for (var M in Elements)
         {
          Elements[M].Resume  ();
          }
          };
         document.getElementById ("Enable") .onclick = function () { for (var M in Elements) { Elements[M].Enable  (); } };
         document.getElementById ("Disable").onclick = function () { for (var M in Elements) { Elements[M].Disable (); } };

         }

      </script>

      <style type = 'text/css'>

      </style>

      <title>Exercise 13</title>
	</head>

   <body onload = 'Init ()'>

      <button type = 'button' id = 'Suspend'  >Suspend   </button><br />
      <button type = 'button' id = 'Resume'   >Resume    </button><br /><br />
      <button type = 'button' id = 'Enable'   >Enable    </button><br />
      <button type = 'button' id = 'Disable'  >Disable   </button><br /><br />
      <button type = 'button' id = 'GetValues'>Get Values</button><br /><br />

      <form id = "TestForm" action = "">

         <input type = "text"     name = "TestText" /><br /><br />

         <input type = "radio"    name = "TestRadioButtons" checked  = "checked"  />Option A<br />
         <input type = "radio"    name = "TestRadioButtons"                       />Option B<br />
         <input type = "radio"    name = "TestRadioButtons"                       />Option C<br /><br />

         <input type = "checkbox" name = "TestCheckBox"                           />Yes/No

      </form>

      <p id = "Output">.</p>

   </body>
</html>














































